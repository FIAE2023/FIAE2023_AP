"use strict";(self.webpackChunkfiae_2023_ap=self.webpackChunkfiae_2023_ap||[]).push([[530],{5063:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"howto/howToGit","title":"... Use Git on this Project","description":"Wie nutzt man Git f\xfcr das Wiki","source":"@site/docs/howto/howto_git.md","sourceDirName":"howto","slug":"/howto/howToGit","permalink":"/FIAE2023_AP/docs/howto/howToGit","draft":false,"unlisted":false,"editUrl":"https://github.com/SMichel89/FIAE2023_AP/tree/main/docs/howto/howto_git.md","tags":[],"version":"current","frontMatter":{"id":"howToGit","title":"... Use Git on this Project","sidebar_class_name":"hidden","description":"Wie nutzt man Git f\xfcr das Wiki"},"sidebar":"howToSidebar","previous":{"title":"How to use Docusaurus in this Project","permalink":"/FIAE2023_AP/docs/howto/howToDocusaurus"},"next":{"title":"... Hochladen eines Bildes","permalink":"/FIAE2023_AP/docs/howto/howToUploadImage"}}');var s=i(4848),r=i(8453);const a={id:"howToGit",title:"... Use Git on this Project",sidebar_class_name:"hidden",description:"Wie nutzt man Git f\xfcr das Wiki"},d=void 0,h={},c=[{value:"Einleitung:",id:"einleitung",level:2},{value:"Getting started:",id:"getting-started",level:2},{value:"Erstellung eines Repositorys:",id:"erstellung-eines-repositorys",level:3},{value:"Wie bekomme ich meine Dateien nun auf Github?",id:"wie-bekomme-ich-meine-dateien-nun-auf-github",level:3},{value:"Branches:",id:"branches",level:3}];function o(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"einleitung",children:"Einleitung:"}),"\n",(0,s.jsx)(n.p,{children:"Diese Seite zeigt alle Git Commands, die Sie f\xfcr die Arbeit mit einem lokalen Repository brauchen."}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Git muss hierf\xfcr schon \xfcber das Terminal installiert worden sein"})}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting started:"}),"\n",(0,s.jsx)(n.h3,{id:"erstellung-eines-repositorys",children:"Erstellung eines Repositorys:"}),"\n",(0,s.jsx)(n.p,{children:"Um ein neues Repository zu erstellen muss man folgenden command nutzen:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git init\n"})}),"\n",(0,s.jsx)(n.p,{children:"Mit diesem wird im derzeitigen Ordner ein git Repository Lokal erstellt und dieses muss sp\xe4ter auf Github/Gitlab gepusht werden."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Es gibt aber auch noch den command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/username/Repositoryname.git\r\n\r\ngit clone git@github.com:username/Repositoryname.git\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Der obere von Beiden commands wird genutzt um Repositorys \xfcber ",(0,s.jsx)(n.strong,{children:"https"})," zu Klonen auf den Rechner.",(0,s.jsx)(n.br,{}),"\n","Der untere command wird genutzt um \xfcber ",(0,s.jsx)(n.strong,{children:"ssh"})," zu Klonen."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Um nun das Repository zu Konfigurieren gibt es nun den command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git config \n"})}),"\n",(0,s.jsxs)(n.p,{children:["Allerdings gibt es noch andere sogenannte Flags die man nutzen muss hierf\xfcr.\r\nIn dem folgenden Link findet man nochmal mehr dazu.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config",children:"Git Config"})]}),"\n",(0,s.jsx)(n.h3,{id:"wie-bekomme-ich-meine-dateien-nun-auf-github",children:"Wie bekomme ich meine Dateien nun auf Github?"}),"\n",(0,s.jsx)(n.p,{children:"Um nun die Dateien auf Github/Gitlab hochzuladen, m\xfcssem wir einiges beachten."}),"\n",(0,s.jsx)(n.p,{children:"Wir haben folgende commands, die zusammen verwendet werden sollten:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git status\r\n\r\ngit add '.' \r\ngit add 'Ordner- / Dateipfad'\r\n\r\ngit commit \n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"git status"})," wird dazu genutzt, den Stand vom Lokalen Github Repository und dem online zu verf\xfcgung stehenden Github Repository auf bisherige \xe4nderungen und gibt dann aus ob alles auf dem gleichen stand ist oder es ver\xe4nderten Dateien auf dem Lokalen Branch gibt, die nicht commitet und gepushed sind."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"git add"})," ist ein wichtiger command, weil wir damit sagen was f\xfcr Ordner/Dateien wir f\xfcr unsere commits beinhalten m\xf6chten.",(0,s.jsx)(n.br,{}),"\n","Da wir vieleicht in einer Vorlage f\xfcr eine Seite und der Hauptdatei etwas ver\xe4ndert haben.",(0,s.jsx)(n.br,{}),"\n","Hierbei ist zu beachten, dass man sinvolle zusammenh\xe4ngende Dateien in einen Commit macht."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"git commit"})," ist der command mit welchem wir letzendlich auf unserem Lokalen branch erstmal eine art speicherung vornehmen m\xfcssen.",(0,s.jsx)(n.br,{}),"\n","Dieser Schritt ist mit dem ",(0,s.jsx)(n.em,{children:"git add"})," Schritt ein Pflicht Schritt da wir sonst keine f\xfcr git sichtbaren ver\xe4nderungen haben.",(0,s.jsx)(n.br,{}),"\n","Daher m\xfcssen wir immer unser \xe4nderungen commiten bevor wir pushen."]}),"\n",(0,s.jsxs)(n.p,{children:["Hier sind Links f\xfcr genaueres zu den commands:",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://www.atlassian.com/git/tutorials/inspecting-a-repository",children:"git status"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://www.atlassian.com/git/tutorials/saving-changes",children:"git add"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://www.atlassian.com/git/tutorials/saving-changes/git-commit",children:"git commit"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["Es gibt neben diesen drei commands auch noch die ",(0,s.jsx)(n.strong,{children:".gitignore"})," Datei die genutzt wird um Dateien nicht mit commiten zu m\xfcssen."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["Wenn die \xe4nderungen Lokal commitet wurden m\xfcssen wir nun auf unseren Branch pushen.",(0,s.jsx)(n.br,{}),"\n","Das macht man mit dem command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git push \n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"git push"})," hat viele verschiedene arten genutzt zu werden.",(0,s.jsx)(n.br,{}),"\n","Im normalfall pushed man auf dem Remote branch in welchem man gerade arbeitet.",(0,s.jsx)(n.br,{}),"\n","Es gibt aber auch noch andere arten es zu nutzen."]}),"\n",(0,s.jsxs)(n.p,{children:["Hier sind Links f\xfcr genaueres zu ",(0,s.jsx)(n.em,{children:"git push"}),":",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://git-scm.com/docs/git-push",children:"Git Dokumentation"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://www.atlassian.com/git/tutorials/syncing/git-push",children:"Atlassian git push Doku"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Um die commits nun auf deinen Lokalen branch zu bekommen und die Dateien upzudaten gibt es die commands:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git fetch \r\n\r\ngit pull\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"git fetch"})," downloaded die commits vom remote und updated die Dateien auf deinem Lokalen Branch.",(0,s.jsx)(n.br,{}),"\n","W\xe4hrend ",(0,s.jsx)(n.em,{children:"git pull"})," die commits downloaded und merged mit deinem Lokalen."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.atlassian.com/git/tutorials/syncing/git-fetch",children:"Git Fetch"}),"\r\n",(0,s.jsx)(n.a,{href:"https://www.atlassian.com/git/tutorials/syncing/git-pull",children:"Git Pull"})]}),"\n",(0,s.jsx)(n.h3,{id:"branches",children:"Branches:"}),"\n",(0,s.jsxs)(n.p,{children:["Ich habe ja jetzt schon h\xe4ufig \xfcber Branches gesprochen.",(0,s.jsx)(n.br,{}),"\n","Aber wie erstelle bzw. benutzt man diese?"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git branch\r\n\r\ngit checkout 'branchname'\r\ngit switch 'branchname'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Der obere command wird mit den meisten Flags genutzt."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"git checkout"})," und ",(0,s.jsx)(n.em,{children:"git switch"})," werden dazu verwendet lokal auf einen branch zu wechseln und man kann diese dann auch wieder pushen.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.em,{children:"git switch"})," kann nicht genutzt werden neue Branches zu erstellen."]}),"\n",(0,s.jsxs)(n.p,{children:["Wenn wir nun mit ",(0,s.jsx)(n.em,{children:"git switch main"})," auf unseren main Branch switchen werden unsere lokalen Dateien von unserem vorherigen branch auf welchem wir uns befunden haben nicht gel\xf6scht, weil wir Lokal unseren branch haben.",(0,s.jsx)(n.br,{}),"\n","Zus\xe4tzlich muss man beachten, dass man wenn man bei der nutzung von ",(0,s.jsx)(n.em,{children:"git switch"})," auf den Lokalen branch wechselt und die updates die dieser Branch bekommen hat erster mit ",(0,s.jsx)(n.em,{children:"git fetch"})," oder ",(0,s.jsx)(n.em,{children:"git pull"})," downloaden muss."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://git-scm.com/docs/git-checkout",children:"Git Checkout Dokumentation"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://git-scm.com/docs/git-switch",children:"Git Switch Dokumentation"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Die m\xf6glichkeit branches zu L\xf6schen gibt es auch mit folgenden command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git branch -d 'branchname'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Mit diesem command k\xf6nnen wir den branch L\xf6schen.",(0,s.jsx)(n.br,{}),"\n","Hierbei ist zu beachten, dass der Branch gemerged sein muss mit dem branch von welchem er erstellt wurde."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://git-scm.com/docs/git-branch",children:"Git Branch Dokumentation"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);